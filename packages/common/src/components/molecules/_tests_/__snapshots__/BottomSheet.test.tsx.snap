// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BottomSheet should render snapshot 1`] = `
<BottomSheet
  onCloseSheet={[MockFunction]}
  visible={false}
>
  <RBSheet
    animationType="none"
    closeDuration={200}
    closeOnDragDown={true}
    closeOnPressBack={true}
    closeOnPressMask={true}
    customStyles={
      Object {
        "container": Object {
          "borderTopLeftRadius": 10,
          "borderTopRightRadius": 10,
        },
      }
    }
    dragFromTopOnly={true}
    height={260}
    keyboardAvoidingViewEnabled={true}
    minClosingHeight={0}
    onClose={[MockFunction]}
    onOpen={null}
    openDuration={300}
  >
    <Component
      animationType="none"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    >
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={false}
      >
        <KeyboardAvoidingView
          behavior="padding"
          enabled={true}
          keyboardVerticalOffset={0}
          style={
            Array [
              Object {
                "backgroundColor": "#00000077",
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Array [
                  Object {
                    "backgroundColor": "#00000077",
                    "flex": 1,
                  },
                  undefined,
                ],
                Object {
                  "paddingBottom": 0,
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#00000077",
                      "flex": 1,
                    },
                    undefined,
                  ],
                  Object {
                    "paddingBottom": 0,
                  },
                ]
              }
            >
              <ForwardRef
                activeOpacity={1}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
              >
                <TouchableOpacity
                  activeOpacity={1}
                  hostRef={null}
                  onPress={[Function]}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "flex": 1,
                    }
                  }
                >
                  <ForwardRef(AnimatedComponentWrapper)
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "flex": 1,
                        },
                        Object {
                          "opacity": 1,
                        },
                      ]
                    }
                  >
                    <AnimatedComponent
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "flex": 1,
                          },
                          Object {
                            "opacity": 1,
                          },
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "flex": 1,
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "flex": 1,
                              "opacity": 1,
                            }
                          }
                        >
                          <PressabilityDebugView
                            color="cyan"
                          />
                        </View>
                      </View>
                    </AnimatedComponent>
                  </ForwardRef(AnimatedComponentWrapper)>
                </TouchableOpacity>
              </ForwardRef>
              <ForwardRef(AnimatedComponentWrapper)
                style={
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateY": 0,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "#fff",
                      "height": 0,
                      "overflow": "hidden",
                      "width": "100%",
                    },
                    Object {
                      "height": 0,
                    },
                    Object {
                      "borderTopLeftRadius": 10,
                      "borderTopRightRadius": 10,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  style={
                    Array [
                      Object {
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      },
                      Object {
                        "backgroundColor": "#fff",
                        "height": 0,
                        "overflow": "hidden",
                        "width": "100%",
                      },
                      Object {
                        "height": 0,
                      },
                      Object {
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "height": 0,
                        "overflow": "hidden",
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#fff",
                          "borderTopLeftRadius": 10,
                          "borderTopRightRadius": 10,
                          "height": 0,
                          "overflow": "hidden",
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                            Object {
                              "translateY": 0,
                            },
                          ],
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        onMoveShouldSetResponder={[Function]}
                        onMoveShouldSetResponderCapture={[Function]}
                        onResponderEnd={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderReject={[Function]}
                        onResponderRelease={[Function]}
                        onResponderStart={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onStartShouldSetResponderCapture={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          onMoveShouldSetResponder={[Function]}
                          onMoveShouldSetResponderCapture={[Function]}
                          onResponderEnd={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderReject={[Function]}
                          onResponderRelease={[Function]}
                          onResponderStart={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          onStartShouldSetResponderCapture={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#ccc",
                                  "borderRadius": 5,
                                  "height": 5,
                                  "margin": 10,
                                  "width": 35,
                                },
                                undefined,
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "#ccc",
                                    "borderRadius": 5,
                                    "height": 5,
                                    "margin": 10,
                                    "width": 35,
                                  },
                                  undefined,
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "marginTop": 18,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flex": 1,
                                "marginTop": 18,
                              },
                              undefined,
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignContent": "center",
                                "flexDirection": "row",
                                "marginHorizontal": 24,
                                "paddingBottom": 20,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignContent": "center",
                                  "flexDirection": "row",
                                  "marginHorizontal": 24,
                                  "paddingBottom": 20,
                                }
                              }
                            >
                              <Icon
                                allowFontScaling={false}
                                color="#33495E"
                                name="close"
                                onPress={[Function]}
                                size={22}
                              >
                                <Text
                                  allowFontScaling={false}
                                  onPress={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "color": "#33495E",
                                        "fontSize": 22,
                                      },
                                      undefined,
                                      Object {
                                        "fontFamily": "icomoon",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      Object {},
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    onPress={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#33495E",
                                          "fontSize": 22,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "icomoon",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </Text>
                              </Icon>
                              <Label
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                      "textAlign": "center",
                                    },
                                    undefined,
                                  ]
                                }
                                textType="semiBold"
                                type="large"
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 22,
                                        "textAlign": "left",
                                      },
                                      Object {
                                        "fontFamily": "OpenSans-SemiBold",
                                        "fontWeight": "600",
                                      },
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "textAlign": "center",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 22,
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "fontFamily": "OpenSans-SemiBold",
                                          "fontWeight": "600",
                                        },
                                        Array [
                                          Object {
                                            "flex": 1,
                                            "textAlign": "center",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  />
                                </Text>
                              </Label>
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <Text>
                                <Text>
                                  Bottom Sheet
                                </Text>
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </View>
          </View>
        </KeyboardAvoidingView>
      </Modal>
    </Component>
  </RBSheet>
</BottomSheet>
`;

exports[`BottomSheet should render snapshot when visible is true 1`] = `
<BottomSheet
  onCloseSheet={[MockFunction]}
  visible={true}
>
  <RBSheet
    animationType="none"
    closeDuration={200}
    closeOnDragDown={true}
    closeOnPressBack={true}
    closeOnPressMask={true}
    customStyles={
      Object {
        "container": Object {
          "borderTopLeftRadius": 10,
          "borderTopRightRadius": 10,
        },
      }
    }
    dragFromTopOnly={true}
    height={260}
    keyboardAvoidingViewEnabled={true}
    minClosingHeight={0}
    onClose={[MockFunction]}
    onOpen={null}
    openDuration={300}
  >
    <Component
      animationType="none"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        Array [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={true}
    >
      <Modal
        animationType="none"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "portrait-upside-down",
            "landscape",
            "landscape-left",
            "landscape-right",
          ]
        }
        transparent={true}
        visible={true}
      >
        <KeyboardAvoidingView
          behavior="padding"
          enabled={true}
          keyboardVerticalOffset={0}
          style={
            Array [
              Object {
                "backgroundColor": "#00000077",
                "flex": 1,
              },
              undefined,
            ]
          }
        >
          <View
            onLayout={[Function]}
            style={
              Array [
                Array [
                  Object {
                    "backgroundColor": "#00000077",
                    "flex": 1,
                  },
                  undefined,
                ],
                Object {
                  "paddingBottom": 0,
                },
              ]
            }
          >
            <View
              onLayout={[Function]}
              style={
                Array [
                  Array [
                    Object {
                      "backgroundColor": "#00000077",
                      "flex": 1,
                    },
                    undefined,
                  ],
                  Object {
                    "paddingBottom": 0,
                  },
                ]
              }
            >
              <ForwardRef
                activeOpacity={1}
                onPress={[Function]}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
              >
                <TouchableOpacity
                  activeOpacity={1}
                  hostRef={null}
                  onPress={[Function]}
                  style={
                    Object {
                      "backgroundColor": "transparent",
                      "flex": 1,
                    }
                  }
                >
                  <ForwardRef(AnimatedComponentWrapper)
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "flex": 1,
                        },
                        Object {
                          "opacity": 1,
                        },
                      ]
                    }
                  >
                    <AnimatedComponent
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "flex": 1,
                          },
                          Object {
                            "opacity": 1,
                          },
                        ]
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "backgroundColor": "transparent",
                            "flex": 1,
                            "opacity": 1,
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "flex": 1,
                              "opacity": 1,
                            }
                          }
                        >
                          <PressabilityDebugView
                            color="cyan"
                          />
                        </View>
                      </View>
                    </AnimatedComponent>
                  </ForwardRef(AnimatedComponentWrapper)>
                </TouchableOpacity>
              </ForwardRef>
              <ForwardRef(AnimatedComponentWrapper)
                style={
                  Array [
                    Object {
                      "transform": Array [
                        Object {
                          "translateX": 0,
                        },
                        Object {
                          "translateY": 0,
                        },
                      ],
                    },
                    Object {
                      "backgroundColor": "#fff",
                      "height": 0,
                      "overflow": "hidden",
                      "width": "100%",
                    },
                    Object {
                      "height": 0,
                    },
                    Object {
                      "borderTopLeftRadius": 10,
                      "borderTopRightRadius": 10,
                    },
                  ]
                }
              >
                <AnimatedComponent
                  style={
                    Array [
                      Object {
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                      },
                      Object {
                        "backgroundColor": "#fff",
                        "height": 0,
                        "overflow": "hidden",
                        "width": "100%",
                      },
                      Object {
                        "height": 0,
                      },
                      Object {
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#fff",
                        "borderTopLeftRadius": 10,
                        "borderTopRightRadius": 10,
                        "height": 0,
                        "overflow": "hidden",
                        "transform": Array [
                          Object {
                            "translateX": 0,
                          },
                          Object {
                            "translateY": 0,
                          },
                        ],
                        "width": "100%",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#fff",
                          "borderTopLeftRadius": 10,
                          "borderTopRightRadius": 10,
                          "height": 0,
                          "overflow": "hidden",
                          "transform": Array [
                            Object {
                              "translateX": 0,
                            },
                            Object {
                              "translateY": 0,
                            },
                          ],
                          "width": "100%",
                        }
                      }
                    >
                      <View
                        onMoveShouldSetResponder={[Function]}
                        onMoveShouldSetResponderCapture={[Function]}
                        onResponderEnd={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderReject={[Function]}
                        onResponderRelease={[Function]}
                        onResponderStart={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        onStartShouldSetResponderCapture={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "width": "100%",
                          }
                        }
                      >
                        <View
                          onMoveShouldSetResponder={[Function]}
                          onMoveShouldSetResponderCapture={[Function]}
                          onResponderEnd={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderReject={[Function]}
                          onResponderRelease={[Function]}
                          onResponderStart={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          onStartShouldSetResponderCapture={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "width": "100%",
                            }
                          }
                        >
                          <View
                            style={
                              Array [
                                Object {
                                  "backgroundColor": "#ccc",
                                  "borderRadius": 5,
                                  "height": 5,
                                  "margin": 10,
                                  "width": 35,
                                },
                                undefined,
                              ]
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "#ccc",
                                    "borderRadius": 5,
                                    "height": 5,
                                    "margin": 10,
                                    "width": 35,
                                  },
                                  undefined,
                                ]
                              }
                            />
                          </View>
                        </View>
                      </View>
                      <View
                        style={
                          Array [
                            Object {
                              "flex": 1,
                              "marginTop": 18,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "flex": 1,
                                "marginTop": 18,
                              },
                              undefined,
                            ]
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignContent": "center",
                                "flexDirection": "row",
                                "marginHorizontal": 24,
                                "paddingBottom": 20,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignContent": "center",
                                  "flexDirection": "row",
                                  "marginHorizontal": 24,
                                  "paddingBottom": 20,
                                }
                              }
                            >
                              <Icon
                                allowFontScaling={false}
                                color="#33495E"
                                name="close"
                                onPress={[Function]}
                                size={22}
                              >
                                <Text
                                  allowFontScaling={false}
                                  onPress={[Function]}
                                  style={
                                    Array [
                                      Object {
                                        "color": "#33495E",
                                        "fontSize": 22,
                                      },
                                      undefined,
                                      Object {
                                        "fontFamily": "icomoon",
                                        "fontStyle": "normal",
                                        "fontWeight": "normal",
                                      },
                                      Object {},
                                    ]
                                  }
                                >
                                  <Text
                                    allowFontScaling={false}
                                    onPress={[Function]}
                                    style={
                                      Array [
                                        Object {
                                          "color": "#33495E",
                                          "fontSize": 22,
                                        },
                                        undefined,
                                        Object {
                                          "fontFamily": "icomoon",
                                          "fontStyle": "normal",
                                          "fontWeight": "normal",
                                        },
                                        Object {},
                                      ]
                                    }
                                  >
                                    
                                  </Text>
                                </Text>
                              </Icon>
                              <Label
                                style={
                                  Array [
                                    Object {
                                      "flex": 1,
                                      "textAlign": "center",
                                    },
                                    undefined,
                                  ]
                                }
                                textType="semiBold"
                                type="large"
                              >
                                <Text
                                  style={
                                    Array [
                                      Object {
                                        "fontSize": 14,
                                        "lineHeight": 22,
                                        "textAlign": "left",
                                      },
                                      Object {
                                        "fontFamily": "OpenSans-SemiBold",
                                        "fontWeight": "600",
                                      },
                                      Array [
                                        Object {
                                          "flex": 1,
                                          "textAlign": "center",
                                        },
                                        undefined,
                                      ],
                                    ]
                                  }
                                >
                                  <Text
                                    style={
                                      Array [
                                        Object {
                                          "fontSize": 14,
                                          "lineHeight": 22,
                                          "textAlign": "left",
                                        },
                                        Object {
                                          "fontFamily": "OpenSans-SemiBold",
                                          "fontWeight": "600",
                                        },
                                        Array [
                                          Object {
                                            "flex": 1,
                                            "textAlign": "center",
                                          },
                                          undefined,
                                        ],
                                      ]
                                    }
                                  />
                                </Text>
                              </Label>
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "flex": 1,
                                }
                              }
                            >
                              <Text>
                                <Text>
                                  Bottom Sheet
                                </Text>
                              </Text>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </AnimatedComponent>
              </ForwardRef(AnimatedComponentWrapper)>
            </View>
          </View>
        </KeyboardAvoidingView>
      </Modal>
    </Component>
  </RBSheet>
</BottomSheet>
`;
